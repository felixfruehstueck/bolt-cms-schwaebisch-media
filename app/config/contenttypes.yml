# This file defines the contenttypes on the website. See the documentation for
# details: https://docs.bolt.cm/contenttypes/intro

# The Homepage contenttype is a singleton: There can be only one record of this
# contenttype.

homepage:
    name: Homepage
    singular_name: Homepage
    fields:
        title:
            type: text
            class: large
            group: content
            postfix: |
                The 'Homepage' can contain basic information about the website. This title will be
                shown on the homepage of the website, as the name implies. To change the
                <em><strong>name</strong></em> of the site, as is shown in the header, and the tab
                in the webbrowser, edit <code>sitename:</code> in the configuration file.
        image:
            type: image
            placeholder: https://source.unsplash.com/1920x640/?cityscape,landscape,nature/__random__
        teaser:
            type: html
            height: 150px
        content:
            type: html
            height: 300px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Homepage. This could either be an 'internal' link like <tt>page//about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        slug:
            type: slug
            uses: title
            group: meta
    viewless: true
    singleton: true
    default_status: published
    icon_many: "fa:home"
    icon_one: "fa:home"


# Pages can be used for the more 'static' pages on your site. This content-type
# has a 'templateselect' field, which allows you to override the record_template
# setting for an individual page.
# The taxonomy for this ContentType is defined as 'groups', which is a so-called
# "grouping taxonomy". This way you can easily group sets of pages that logically
# belong together. If your site has a 'services' section, in which you'd like to
# list the different types of services a company provides, you can group these
# together.

pages:
    name: Pages
    singular_name: Page
    fields:
        title:
            type: text
            class: large
            group: content
        slug:
            type: slug
            uses: title
        image:
            type: image
            placeholder: https://source.unsplash.com/1280x768/?business,workplace/__random__
        teaser:
            type: html
            height: 150px
        body:
            type: html
            height: 300px
        template:
            type: templateselect
            filter: '*.twig'
    taxonomy: [ groups ]
    recordsperpage: 20


# Schwäbisch Media Produkte
produkte:
    name: Produkte
    singular_name: Produkt
    fields:
        title:
            type: text
            group: Allgemein
            label: "Produktname"
            postfix: "<p>Max. 30 Zeichen.</p>"
            pattern: "^.{1,30}$"
        slug:
            type: slug
            uses: title
            group: Allgemein
            postfix: "<p>Die URL des Eintrages. Muss normalerweise nicht verändert werden.</p>"
        type:
            type: select
            required: true
            group: Allgemein
            label: "Typ"
            values: { 'print': "Print", 'online': "Online", 'event': "Veranstaltung" }
        channels:
            type: select
            required: true
            multiple: true
            group: Allgemein
            label: "Thema"
            values: { 'ausbildung': "Ausbildung", 'recruiting': "Stellenanzeigen", 'marketing': "Personalmarketing" }
        
        #teaser
        teaser_title:
            type: text
            group: Teaser
            label: "Titel (Teaser)"
            postfix: "<p>Der Produktname im Raster auf der Startseite, z.B. <em>startbahnsüd.de</em> oder <em>Willkommen daheim</em>. Max. 30 Zeichen.</p>"
            pattern: "^.{1,30}$"
        teaser_subtitle:
            type: text
            group: Teaser
            label: "Untertitel (Teaser)"
            postfix: "<p>Unterzeile des Teasers (auf der Startseite). Max. 40 Zeichen lang.</p>"
            required: true
            pattern: "^.{1,40}$"
        teaser_image:
            type: image
            group: Teaser
            label: "Bild (Teaser, Seitenverhältnis 3x2)"
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
        teaser_text:
            type: text
            group: Teaser
            label: "Text (Teaser)"
            postfix: "<p>Kurze Zusammenfassung in der Produktübersicht (auf der Startseite). Max. 70 Zeichen lang.</p>"
            required: true
            pattern: "^.{1,70}$"
        
        #hauptinhalt (oben)
        content_subtitle:
            type: text
            group: Inhalt
            uses: title
            label: "Untertitel"
        body:
            type: html
            group: Inhalt
            height: 300px
            label: "Inhalt"
        image:
            type: image
            group: Inhalt
            attrib: title # Note: retrieve this in your template with {{ record.values.image.title }}
            extensions: [ gif, jpg, png ]
            placeholder: https://source.unsplash.com/1280x768/?animal,koala,kitten,puppy,cute/__random__
            label: "Bild"
        
        #kurzportrait
        info:
            type: html
            group: Inhalt
            height: 300px
            label: "Kurzportrait"
        pros:
            type: html
            group: Inhalt
            height: 300px
            label: "Vorteile"
        
        #formate + preise
        pricing:
            type: html
            group: Inhalt
            height: 300px
            label: "Formate & Preise"
        
        #formate + preise
        distribution:
            type: html
            group: Inhalt
            height: 300px
            label: "Verteilung"
        #erscheinungsweise
        publish_cycle:
            type: select
            required: true
            group: Erscheinungsweise
            label: "Erscheinungsweise"
            values: { 'permanently': "Laufend", 'weekly': "Wöchentlich", 'single': "Einmalig", 'multiple': "Mehrfach" }
        # options für "laufend"
        publish_permanent_issue:
            type: text
            group: Erscheinungsweise
            label: "Erscheinungstermin"
        publish_permanent_close:
            type: text
            group: Erscheinungsweise
            label: "Anzeigenschluss"
        # options für "wöchentlich"
        publish_weekly_weekday:
            type: select
            group: Erscheinungsweise
            label: "Erscheinungstag"
            values: { 'Monday': "Montag", 'Dienstag': "Dienstag", 'Wednesday': "Mittwoch", 'Thursday': "Donnerstag", 'Friday': "Freitag", 'Saturday': "Samstag", 'Sunday': "Sonntag" }
        publish_weekly_close_offset:
            type: integer
            group: Erscheinungsweise
            label: "Anzeigenschluss - Tage vor Erscheinung"
        publish_weekly_close_time:
            type: text
            group: Erscheinungsweise
            label: "Anzeigenschluss - Uhrzeit"
        # options "single"
        publish_single_issue:
            type: date
            group: Erscheinungsweise
            label: "Erscheinungstermin"
        publish_single_close:
            type: datetime
            group: Erscheinungsweise
            label: "Anzeigenschluss"
        # options "multiple"
        publish_multiple:
            type: repeater
            label: "Mehrfach-Erscheinung"
            fields:
                publish_multiple_name:
                    type: text
                    group: Erscheinungsweise
                    label: "Produktvariante"
                publish_multiple_issue:
                    type: date
                    group: Erscheinungsweise
                    label: "Erscheinungstermin"
                publish_multiple_close:
                    type: datetime
                    group: Erscheinungsweise
                    label: "Anzeigenschluss"
    relations:
        produkte:
          multiple: true
          order: title
          label: "Verwandte Produkte wählen"

    record_template: product.twig
    listing_template: listing.twig
    listing_records: 10
    default_status: published
    sort: -datepublish
    recordsperpage: 20

# The 'Blocks' ContentType is a so-called 'resource ContentType'. This means
# that it can be used to manage smaller pieces of content, like the 'about us'
# text, an 'our address' in the footer, or similar short blurbs of text.
# For more info, see: https://docs.bolt.cm/howto/resource-contenttype

blocks:
    name: Blocks
    singular_name: Block
    fields:
        title:
            type: text
            class: large
            group: "Block"
        slug:
            type: slug
            uses: [ title ]
        content:
            type: html
            height: 150px
        contentlink:
            type: text
            label: Link
            placeholder: 'contenttype/slug or http://example.org/'
            postfix: "Use this to add a link for this Block. This could either be an 'internal' link like <tt>page/about</tt>, if you use a contenttype/slug combination. Otherwise use a proper URL, like `http://example.org`."
        image:
            type: image
            attrib: title
            extensions: [ gif, jpg, png ]
    show_on_dashboard: true
    viewless: true
    default_status: published
    searchable: false
    icon_many: "fa:cubes"
    icon_one: "fa:cube"

# Possible field types:
#
# text - varchar(256) - input type text.
# integer - integer - Input field for integer numbers.
# float - double - Input field for floating numbers, stored as 'Double'.
# geolocation - text (65kb) - Input field for geolocation. Enter an address, and the location is geocoded to latitude/longitude coordinates
# imagelist - text (65kb) - Input type for imagelists. Add multiple images with a description. Useful for image sliders, galleries, etcetera.
# image - varchar(256) - image select/upload widget, stored as filename.
# file - varchar(256) - file select/upload widget, stored as filename.
# filelist - text (65kb) - Input type for a list of files. Including a description.
# video - varchar(256) - Video embed widget, stored as filename.
# html - text (65kb) - wysiwyg element.
# textarea - varchar(32768) - Simple, plain < textarea > field.
# markdown - varchar(32768) - Simple, plain < textarea > field, which is parsed as Markdown text.
# datetime - datetime - date and time selector widget.
# date - datetime - date selector widget.
# select - varchar(256) - select with predefined values
# templateselect - varchar(256) - select with template filenames
# checkbox - integer - checkbox-field which is 1 (checked) or 0 (unchecked)

# Using YAML repeated nodes
#
# YAML allows the defining of "repeated nodes". These allow you to define a 'node'
# with a 'key: &name' and referenced later with '<<: *name'
#
# Bolt allows you to define this with the special entry of '__nodes:' that itself
# won't create a ContentType, but will allow you to use it in actual ContentTypes
# to prevent repeating yourself.
#
# To achieve this, first create a key '__nodes:'
#__nodes:
#    field_defaults: &field_defaults
#        title:
#            type: text
#            class: large
#            group: main
#        slug:
#            type: slug
#            uses: title
#    template_defaults: &template_defaults
#        template:
#            type: templateselect
#            filter: '*.twig'
#            group: meta
#
# Then, as an example, you could create a ContentType with default fields, with
# an additional 'image' field.
#
#contenttype_abc:
#    name: ContentType Abc
#    fields:
#        <<: *field_defaults
#        image:
#            type: image
#            attrib: title
#            extensions: [ gif, jpg, png ]
#        <<: *template_defaults
#    taxonomy: [ chapters ]
#    recordsperpage: 10
#
# Alternatively, or additionally, you then can then create a ContentType with
# default fields, and a 'select' field, and a different 'templateselect' option.
#
#contenttype_xyz:
#    name: ContentType Xyz
#    fields:
#        <<: *field_defaults
#        selectfield:
#            type: select
#            values: [ none, foo, bar ]
#        template:
#            type: templateselect
#            filter: '*_xyz.twig'
#    taxonomy: [ tags ]
#    recordsperpage: 20
